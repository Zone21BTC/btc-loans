name: Check & Build

on:
  workflow_dispatch:
  pull_request:
    paths: ['providers/**']
  push:
    branches: [main]
    paths: ['providers/**']

jobs:
  test:
    # runs on every PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run validate
      - run: npm run build # but DON'T commit
      - name: Upload aggregate artifact
        uses: actions/upload-artifact@v4
        with:
          name: all-providers.json
          path: dist/all-providers.json

  publish:
    # runs only after merge to main
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write # <-- gives this job push rights
    env:
      BASE_SHA: ${{ github.event_name == 'push' && github.event.before || github.event.pull_request.base.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # full clone so git push works
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run build # rebuild against up-to-date main
      - name: Detect changed provider files
        id: files
        run: |
          git diff --name-only $BASE_SHA $GITHUB_SHA -- providers/**/data.json \
            | tr '\n' ' ' | sed 's/ $//' | tee files.txt
          echo "FILES=$(cat files.txt)" >> $GITHUB_OUTPUT
      - name: Update changelogs
        if: steps.files.outputs.FILES != ''
        run: |
          for f in ${{ steps.files.outputs.FILES }}; do
            npm run changelog "$f"
          done
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add dist/ providers/*/changelog.json providers/*/CHANGELOG.md
          git commit -m "chore: update build artifacts and changelogs" --no-verify || echo "No changes to commit"
          git push
